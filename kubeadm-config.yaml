apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  bindPort: ${PORT_KUBE_APISERVER}
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
controlPlaneEndpoint: "${NODE_NAME}:${PORT_KUBE_APISERVER}"
apiServer:
  certSANs:
  - localhost
  - 127.0.0.1
  - "${NODE_NAME}"
  - "${HOST_IP}"
  extraArgs:
  - name: etcd-servers
    value: https://127.0.0.1:${PORT_ETCD}
  - name: advertise-address
    value: ${HOST_IP}
  - name: secure-port
    value: "${PORT_KUBE_APISERVER}"
    # Default: "Hostname,InternalDNS,InternalIP,ExternalDNS,ExternalIP"    
  - name: kubelet-preferred-address-types
    value: ExternalIP
controllerManager:
  extraArgs:
    - name: cloud-provider
      value: external
networking:
  serviceSubnet: "10.96.0.0/16"
  podSubnet: "10.244.0.0/16"
etcd:
  local:
    extraArgs:
      - name: listen-client-urls
        value: "https://127.0.0.1:${PORT_ETCD},https://${NODE_IP}:${PORT_ETCD}"
      - name: advertise-client-urls
        value: https://${NODE_IP}:${PORT_ETCD}
---
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
failSwapOn: false
port: ${PORT_KUBELET}
featureGates:
  KubeletInUserNamespace: true
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: "iptables"
conntrack:
  # Skip setting sysctl value "net.netfilter.nf_conntrack_max"
  maxPerCore: 0
  # Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
  # Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s
